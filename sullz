import base64

key = [115, 117, 108, 108, 122]

def xor_decrypt(data, key):
    return bytes([b ^ key[i % len(key)] for i, b in enumerate(data)])

def caesar_decrypt(data, shift):
    return bytes([(b - shift) % 256 for b in data])

def reverse_bytes(data):
    return data[::-1]

encrypted_b64 = '''
